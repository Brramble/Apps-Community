#!/bin/bash
#
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'filebrowser'
        intport: '80'
        extport: '81'
        image: 'filebrowser/filebrowser'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

    - name: 'Check for existing folder {{pgrole}}'
      stat:
        path: '/opt/appdata/{{pgrole}}/'
      register: fbrowser

    - name: 'Create {{pgrole}} Folder'
      file: 'path={{item}} state=directory mode=0775 owner=1000 group=1000'
      with_items:
        - '/opt/appdata/{{pgrole}}/'
      when: fbrowser.stat.exists == False
      ignore_errors: yes

    - name: 'Check for database files in {{ pgrole }}'
      stat:
        path: '/opt/appdata/{{pgrole}}/database.db'
      register: dbcheck

    - name: 'Make new db for {{ pgrole }} deployment'
      shell: 'touch database.db'
      ignore_errors: yes
      when: dbcheck.stat.exists == False

    - name: 'Check for json files in {{ pgrole }}'
      stat:
        path: '/opt/appdata/{{pgrole}}/.filebrowser.json'
      register: jsoncheck

    - name: 'Make new db for {{ pgrole }} deployment'
      shell: 'touch .filebrowser.json'
      ignore_errors: yes
      when: jsoncheck.stat.exists == False

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting {{pgrole}} Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}/database.db:/database.db'
          - '/opt/appdata/{{pgrole}}/.filebrowser.json:/.filebrowser.json'
          - '/:/srv'
          - '{{path.stdout}}:{{path.stdout}}'
          - '/etc/localtime:/etc/localtime:ro'

    - name: 'Setting {{pgrole}} ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

